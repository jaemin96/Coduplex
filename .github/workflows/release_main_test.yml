name: test main release pipeline

on:
  pull_request:
    branches: [main-test]

env:
  NODE_ENV: production
  NODE_VERSION: 22
  PNPM_VERSION: 10

jobs:
  install:
    name: Install & Cache
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: |
          pnpm --version   
          pnpm install --frozen-lockfile

      - name: Install dependencies (filtered)
        run: pnpm install

  ui-ci:
    uses: ./.github/workflows/_package-ci.yml
    with:
      package: ui

  package-ci:
    needs: ui-ci
    uses: ./.github/workflows/_package-ci.yml
    with:
      package: ${{ matrix.pkg }}
    strategy:
      matrix:
        pkg: [web-client, dawntech]

  release-test:
    name: Test release
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore root node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-root-${{ hashFiles('pnpm-lock.yaml') }}

      - run: pnpm install --frozen-lockfile
