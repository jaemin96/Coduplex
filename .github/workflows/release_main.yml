name: Main Release Flow

on:
  push:
    branches: [main]

env:
  NODE_ENV: production
  NODE_VERSION: 22
  PNPM_VERSION: 10
  USER_NAME: jaemin96
  USER_EMAIL: lemon__96@naver.com

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Restore root node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-root-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Configure Git user
        run: |
          git config user.name "${{ env.USER_NAME }}"
          git config user.email "${{ env.USER_EMAIL }}"

      - name: Setup SSH for GitHub
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Tag Release
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          git config user.name "${{ env.USER_NAME }}"
          git config user.email "${{ env.USER_EMAIL }}"
          git tag -a "v$VERSION" -m "Release $VERSION"

      - name: Debug VERSION
        run: echo "VERSION=${{ env.VERSION }}"

      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          token: ${{ secrets.RELEASE_TOKEN }}
