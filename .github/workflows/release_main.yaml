name: Main Release Pipeline

on:
  pull_request:
    branches: [main-test]

env:
  NODE_ENV: production
  NODE_VERSION: 22
  PNPM_VERSION: 10

jobs:
  install:
    name: Install & Cache
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies (filtered)
        run: pnpm install

  release-test:
    name: Test release
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: pnpm install --frozen-lockfile
      - run: pnpm lint && pnpm build
      - name: Final tests
        run: pnpm test

  release:
    name: Release
    needs: release-test
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v3
      - run: |
          VERSION=$(node -p "require('./package.json').version")
          git tag -a "v$VERSION" -m "Release $VERSION"
          git push origin --tags
      - name: GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v$VERSION"
